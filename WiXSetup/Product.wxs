<?xml version="1.0" encoding="UTF-8"?>
<!--
/* * * * * * * * * * * * * * * * * * * * *
**
** Copyright 2012 Dominik Pretzsch
** 
**    Licensed under the Apache License, Version 2.0 (the "License");
**    you may not use this file except in compliance with the License.
**    You may obtain a copy of the License at
** 
**        http://www.apache.org/licenses/LICENSE-2.0
** 
**    Unless required by applicable law or agreed to in writing, software
**    distributed under the License is distributed on an "AS IS" BASIS,
**    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
**    See the License for the specific language governing permissions and
**    limitations under the License.
**
** * * * * * * * * * * * * * * * * * * */
-->
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <?include $(sys.CURRENTDIR)\Config.wxi ?>

   
  <!-- Preconditions and pre-setups -->
  <Product Id="*" Language="1033"
           Name="$(var.ProductName)"
           Manufacturer="$(var.Publisher)"
           Version="$(var.Version)"
           UpgradeCode="446d1da0-95c1-4601-a286-7d5c12fcaf26">

    <Package Id="*" InstallerVersion="405" Compressed="yes" InstallScope="perMachine" InstallPrivileges="elevated"
             Manufacturer="$(var.Publisher)"
             Description="$(var.ProductName) $(var.Version) Setup" />

    <MajorUpgrade AllowDowngrades="no" AllowSameVersionUpgrades="yes" MigrateFeatures="yes" DowngradeErrorMessage="A newer version is already installed!" />
    
    <Property Id="ARPURLINFOABOUT" Value="$(var.AppURLInfoAbout)" />
    <!--
    <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />-->
    <!-- Disable the modify button in software explorer -->
    <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />
    
    <Condition Message="You need to be an administrator to install this product.">
      Privileged
    </Condition>
   
    <!-- Custom action definitions -->
    <CustomAction Id='IsPrivileged' Error='You must be an admin to install this product' />
    <CustomAction Id="PreventDowngrading" Error="Newer version already installed." />
    <!-- END Custom action definitions-->
    
    <InstallExecuteSequence>
      <Custom Action='IsPrivileged' Before='AppSearch'>
        Not Privileged
      </Custom>
    </InstallExecuteSequence>
   
    <!-- Icons etc -->
    <Icon Id="icon.ico" SourceFile='$(var.SolutionDir)img/icon.ico' />
    <Property Id="ARPPRODUCTICON" Value="icon.ico" />
    
    <Media Id='1' Cabinet='Sample.cab' EmbedCab='yes' DiskPrompt='DISK #1' />
    <Property Id='DiskPrompt' Value="$(var.ProductName) Setup [1]" />

    <Binary Id='WiXCustomActions' SourceFile='$(var.WiXCustomActions.TargetPath)' />
    
    <Binary Id='InfoIcon' SourceFile='$(var.SolutionDir)img/info.ico' />
    <Binary Id='HelpIcon' SourceFile='$(var.SolutionDir)img/help.ico' />
    <Binary Id='ExclamIcon' SourceFile='$(var.SolutionDir)img/exclam.ico' />
    <!-- END  Icons etc -->
    <!-- END Preconditions and pre-setups -->

    <!-- Get values from registry if available. (What if unattended/silent install?)-->
    <Property Id="HOSTNAME" Value = "hostname">
      <RegistrySearch Id="SearchHostname"              Root="HKLM" Key="SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)" Name="hostname"               Win64="$(var.Win64)" Type="raw"/>
    </Property>

    <Property Id="PATH" Value = "/path">
      <RegistrySearch Id="SearchPath"              Root="HKLM" Key="SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)" Name="path"               Win64="$(var.Win64)" Type="raw"/>
    </Property>

    <Property Id="LOGIN_TEXT">
      <RegistrySearch Id="SearchLoginText"              Root="HKLM" Key="SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)" Name="login_text"               Win64="$(var.Win64)" Type="raw" />
    </Property>

    <Property Id="OTP_TEXT">
      <RegistrySearch Id="SearchOTPText"              Root="HKLM" Key="SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)" Name="otp_text"               Win64="$(var.Win64)" Type="raw" />
    </Property>

    <Property Id="V1_BITMAP_PATH">
      <RegistrySearch Id="SearchV1BitmapPath"           Root="HKLM" Key="SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)" Name="v1_bitmap_path"           Win64="$(var.Win64)" Type="raw" />
    </Property>
    
    <Property Id="V2_BITMAP_PATH">
      <RegistrySearch Id="SearchV2BitmapPath"           Root="HKLM" Key="SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)" Name="v2_bitmap_path"           Win64="$(var.Win64)" Type="raw" />
    </Property>

    <!-- Directory definitions -->   
    <Directory Id="TARGETDIR" Name="SourceDir">

      <!-- Visual Studio C++ Redistributable - - >
      <?if $(var.Configuration) = Debug ?>
        <?if $(var.Platform) = x64 ?>
          <Merge Id="VCRedist" SourceFile="$(var.SolutionDir)lib\redistribute\Microsoft_VC140_DebugCRT_x64.msm" DiskId="1" Language="0"/>
        <?else ?>
          <Merge Id="VCRedist" SourceFile="$(var.SolutionDir)lib\redistribute\Microsoft_VC140_DebugCRT_x86.msm" DiskId="1" Language="0"/>
        <?endif ?>
      <?else ?>
        <?if $(var.Platform) = x64 ?>
          <Merge Id="VCRedist" SourceFile="$(var.SolutionDir)lib\redistribute\Microsoft_VC140_CRT_x64.msm" DiskId="1" Language="0"/>
        <?else ?>
          <Merge Id="VCRedist" SourceFile="$(var.SolutionDir)lib\redistribute\Microsoft_VC140_CRT_x86.msm" DiskId="1" Language="0"/>
        <?endif ?>
      <?endif ?>
      < ! - - END Visual Studio C++ Redistributable -->

      <!-- Directories/Components to be placed in ProgramFiles-folder -->
      <Directory Id="$(var.PlatformProgramFilesFolder)">
        <Directory Id="CompanyFolder" Name="$(var.Publisher)">
          <Directory Id="INSTALLFOLDER" Name="$(var.ProductFolderName)">
            
            <Component Id="DefaultFilesInProgramFolder" Location="local" Guid="9d02dffe-1766-420c-97b5-755979b68205">
              <!-- Files -->
              <File Id="LicenseFile"
                    Name="ApacheLicense.rtf"
                    Source="$(var.SolutionDir)license/ApacheLicense.rtf"
                    KeyPath="yes" />

              <RemoveFile Id="RemoveInstallFiles" Name="*" On="uninstall"/>
              <!-- END Files -->
              <!-- Folders -->
              <RemoveFolder Id="RemoveInstallFolder" On="uninstall"/>
              <RemoveFolder Id="RemoveCompanyFolderIfEmpty" Directory="CompanyFolder" On="uninstall"/>
              <!-- END Folders -->              
            </Component>
            
          </Directory>
        </Directory>
      </Directory>
      <!-- END Directories/Components to be placed in ProgramFiles-folder -->

      <!-- Directories/Components to be placed in System-folder -->
      <Directory Id="$(var.PlatformSystemFolder)">
        
        <!-- Core components -->   
        <Component Location="local" Guid="9944eca5-ac62-4a0e-82fa-5ec243a56b0d" Transitive="yes">
          <Condition>1</Condition>
          <!-- Files -->
          <File Id="CredentialProvider"
                Name="$(var.EndpointName)$(var.SCZ_CP.TargetFileName)"
                Source="$(var.SCZ_CP.TargetPath)"
                KeyPath="yes" />

          <RemoveFile Id="RemoveCredentialProviderFiles" Name="$(var.EndpointName)$(var.SCZ_CP.TargetFileName)" On="uninstall"/>
          <!-- END Files -->

          <!-- Registry -->
          <RegistryKey Root='HKCR' Key='CLSID\{$(var.ProviderRegistryGUID)}' ForceCreateOnInstall='yes'>
            <RegistryValue Type='string' Value='$(var.EndpointName)$(var.SCZ_CP.TargetName)' />
            <RegistryKey Key='InprocServer32'>
              <RegistryValue Type='string' Value='$(var.EndpointName)$(var.SCZ_CP.TargetFileName)' />
              <RegistryValue Name='ThreadingModel' Type='string' Value='Apartment' />
            </RegistryKey>
          </RegistryKey>

          <RegistryValue Root='HKLM' Key='SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Providers\{$(var.ProviderRegistryGUID)}' Type='string' Value='$(var.EndpointName)$(var.SCZ_CP.TargetName)' />
          <RemoveRegistryKey Root='HKLM' Key='SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Providers\{$(var.ProviderRegistryGUID)}' Action='removeOnUninstall'/>

          <!-- Configuration values (from dialogs/registry/unattended) -->

          <RegistryKey Root='HKLM' Key='SOFTWARE\$(var.Manufacturer)\$(var.SimpleProductName)' ForceCreateOnInstall='yes'>
            <RegistryValue Name='hostname'              Type='string'  Value='[HOSTNAME]'           />
            <RegistryValue Name='path'                  Type='string'  Value='[PATH]'           />
            <RegistryValue Name='login_text'            Type='string'  Value='[LOGIN_TEXT]'           />
            <RegistryValue Name='otp_text'              Type='string'  Value='[OTP_TEXT]'           />
            <RegistryValue Name='v1_bitmap_path'        Type='string'  Value='[V1_BITMAP_PATH]' />
            <RegistryValue Name='v2_bitmap_path'        Type='string'  Value='[V2_BITMAP_PATH]' />
          </RegistryKey>
          <!-- END Configuration values -->

          <!-- END Registry -->
          
        </Component>

        <!-- ProviderFilter component -->
        <Component Location="local" Guid="a6d595a6-58b4-4541-8171-65f3f364b58c">
          <!-- Files -->
          <File Id="CredentialProviderFilter"
                Name="$(var.EndpointName)$(var.SCZ_CP_Filter.TargetFileName)"
                Source="$(var.SCZ_CP_Filter.TargetPath)"
                KeyPath="yes" />

          <RemoveFile Id="RemoveCredentialProviderFilterFiles" Name="$(var.EndpointName)$(var.SCZ_CP_Filter.TargetFileName)" On="uninstall" />
          <!-- END Files -->

          <!-- Registry -->
          <RegistryKey Root='HKCR' Key='CLSID\{$(var.ProviderFilterRegistryGUID)}' ForceCreateOnInstall='yes'>
            <RegistryValue Type='string' Value='$(var.EndpointName)$(var.SCZ_CP_Filter.TargetName)' />
            <RegistryKey Key='InprocServer32'>
              <RegistryValue Type='string' Value='$(var.EndpointName)$(var.SCZ_CP_Filter.TargetFileName)' />
              <RegistryValue Name='ThreadingModel' Type='string' Value='Apartment' />
            </RegistryKey>
          </RegistryKey>         
          <!-- END Registry -->
        </Component>
        <!-- END ProviderFilter component -->

        <!-- Activate ProviderFilter (InstallAsDefault) component -->
        <Component Id="ActivateCredentialProviderFilter" Location="local" Guid="ddc94b52-e7f2-4632-9f04-37f1b2b3c7a3">
          <RegistryValue Root='HKLM' Key='SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider Filters\{$(var.ProviderFilterRegistryGUID)}' Type='string' Value='$(var.EndpointName)$(var.SCZ_CP_Filter.TargetName)' KeyPath='yes' />
          <RemoveRegistryKey Root='HKLM' Key='SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider Filters\{$(var.ProviderFilterRegistryGUID)}' Action='removeOnUninstall'/>
        </Component>

        <!-- END Core components -->
        
      </Directory>
      <!-- END Directories/Components to be placed in System-folder -->
      
    </Directory>
    <!-- END Directory definitions -->

    <!-- Feature definitions -->
    <Feature Id='Complete' Title='$(var.ProductName)' Description='Full install' Display='expand' Level='1' ConfigurableDirectory='INSTALLFOLDER' AllowAdvertise='no' Absent='disallow' InstallDefault="local">
      <Feature Id='MainInstall' Title='Core components' Description='Core $(var.ProductName) components' Level='1' AllowAdvertise='no' Absent='disallow' InstallDefault="local">
        <ComponentRef Id='CredentialProvider' />
        <ComponentRef Id='CredentialProviderFilter' />
      </Feature>
      
      <!-- These are installed anyway: - - >
      <Feature Id="VCRedist" Title="Visual C++ 12.0 Runtime" AllowAdvertise="no" Display="hidden" Level="1">
        <MergeRef Id='VCRedist'/>
      </Feature>
    -->
      
      <Feature Id='InstallAsDefault' Title='Default provider' Description='Install $(var.ProductName) as default provider. No other provider will be allowed to be used for logon.' Level='1000' AllowAdvertise='no' InstallDefault="local">
        <ComponentRef Id='ActivateCredentialProviderFilter' />
      </Feature>

      <ComponentRef Id='DefaultFilesInProgramFolder' />
    </Feature>
    <!-- END Feature definitions -->

    <!-- WiX Configuration -->
    <WixVariable Id="WixUILicenseRtf" Value="$(var.SolutionDir)license/ApacheLicense.rtf" />
    
    <WixVariable Id="WixUIBannerBmp" Value="$(var.SolutionDir)img/WixUIBannerBmp.bmp" />
    <WixVariable Id="WixUIDialogBmp" Value="$(var.SolutionDir)img/WixUIDialogBmp.bmp" />
    <!-- END WiX Configuration -->

    <!-- UI Configuration -->
    <UI Id="MyWixUI_FeatureTree">
      <UIRef Id="WixUI_FeatureTree"/>

      <!-- Custom dialogs -->
      <DialogRef Id="ServerConfigurationDlg" />
      <DialogRef Id="UserConfigurationDlg" />
      <!--
      <DialogRef Id="SecurityConfigurationDlg" />
      //-->

      <!-- Queue custom dialogs start/end -->
      <!-- Start -->
      <Publish Dialog="CustomizeDlg" Control="Next" Event="NewDialog" Value="ServerConfigurationDlg">1</Publish>
      <!-- End -->
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="ServerConfigurationDlg" Order="1">NOT Installed OR (WixUI_InstallMode = "Change" AND USER_IS_ADMINISTRATOR = "1" )</Publish>
      <!-- END Queue custom dialogs -->
    </UI>
    <!-- END UI Configuration -->

    </Product>
</Wix>